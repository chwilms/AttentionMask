#Modified version of the original code from Hu et al.
#
#@author Hu et al.
#@author Christian Wilms
#@date 11/15/18

name: 'Single Shot Mask - ResNet 50'

layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 224
      dim: 224
    }
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "bn_conv1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale_conv1"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "res2a_branch1"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch1"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn2a_branch1"
  type: "BatchNorm"
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch1"
  type: "Scale"
  bottom: "res2a_branch1"
  top: "res2a_branch1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn2a_branch2a"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch2a"
  type: "Scale"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2a_relu"
  type: "ReLU"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a"
  top: "res2a_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn2a_branch2b"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch2b"
  type: "Scale"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a_branch2b_relu"
  type: "ReLU"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b"
}
layer {
  name: "res2a_branch2c"
  type: "Convolution"
  bottom: "res2a_branch2b"
  top: "res2a_branch2c"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn2a_branch2c"
  type: "BatchNorm"
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2a_branch2c"
  type: "Scale"
  bottom: "res2a_branch2c"
  top: "res2a_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2a"
  type: "Eltwise"
  bottom: "res2a_branch1"
  bottom: "res2a_branch2c"
  top: "res2a"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2a_relu"
  type: "ReLU"
  bottom: "res2a"
  top: "res2a"
}
layer {
  name: "res2b_branch2a"
  type: "Convolution"
  bottom: "res2a"
  top: "res2b_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn2b_branch2a"
  type: "BatchNorm"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2b_branch2a"
  type: "Scale"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b_branch2a_relu"
  type: "ReLU"
  bottom: "res2b_branch2a"
  top: "res2b_branch2a"
}
layer {
  name: "res2b_branch2b"
  type: "Convolution"
  bottom: "res2b_branch2a"
  top: "res2b_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn2b_branch2b"
  type: "BatchNorm"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2b_branch2b"
  type: "Scale"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b_branch2b_relu"
  type: "ReLU"
  bottom: "res2b_branch2b"
  top: "res2b_branch2b"
}
layer {
  name: "res2b_branch2c"
  type: "Convolution"
  bottom: "res2b_branch2b"
  top: "res2b_branch2c"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn2b_branch2c"
  type: "BatchNorm"
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2b_branch2c"
  type: "Scale"
  bottom: "res2b_branch2c"
  top: "res2b_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2b"
  type: "Eltwise"
  bottom: "res2a"
  bottom: "res2b_branch2c"
  top: "res2b"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2b_relu"
  type: "ReLU"
  bottom: "res2b"
  top: "res2b"
}
layer {
  name: "res2c_branch2a"
  type: "Convolution"
  bottom: "res2b"
  top: "res2c_branch2a"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn2c_branch2a"
  type: "BatchNorm"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2c_branch2a"
  type: "Scale"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_branch2a_relu"
  type: "ReLU"
  bottom: "res2c_branch2a"
  top: "res2c_branch2a"
}
layer {
  name: "res2c_branch2b"
  type: "Convolution"
  bottom: "res2c_branch2a"
  top: "res2c_branch2b"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn2c_branch2b"
  type: "BatchNorm"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2c_branch2b"
  type: "Scale"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c_branch2b_relu"
  type: "ReLU"
  bottom: "res2c_branch2b"
  top: "res2c_branch2b"
}
layer {
  name: "res2c_branch2c"
  type: "Convolution"
  bottom: "res2c_branch2b"
  top: "res2c_branch2c"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn2c_branch2c"
  type: "BatchNorm"
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale2c_branch2c"
  type: "Scale"
  bottom: "res2c_branch2c"
  top: "res2c_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res2c"
  type: "Eltwise"
  bottom: "res2b"
  bottom: "res2c_branch2c"
  top: "res2c"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res2c_relu"
  type: "ReLU"
  bottom: "res2c"
  top: "res2c"
}
layer {
  name: "res3a_branch1"
  type: "Convolution"
  bottom: "res2c"
  top: "res3a_branch1"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "bn3a_branch1"
  type: "BatchNorm"
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch1"
  type: "Scale"
  bottom: "res3a_branch1"
  top: "res3a_branch1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "res2c"
  top: "res3a_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "bn3a_branch2a"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch2a"
  type: "Scale"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2a_relu"
  type: "ReLU"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a"
  top: "res3a_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn3a_branch2b"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch2b"
  type: "Scale"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a_branch2b_relu"
  type: "ReLU"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b"
}
layer {
  name: "res3a_branch2c"
  type: "Convolution"
  bottom: "res3a_branch2b"
  top: "res3a_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn3a_branch2c"
  type: "BatchNorm"
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3a_branch2c"
  type: "Scale"
  bottom: "res3a_branch2c"
  top: "res3a_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3a"
  type: "Eltwise"
  bottom: "res3a_branch1"
  bottom: "res3a_branch2c"
  top: "res3a"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3a_relu"
  type: "ReLU"
  bottom: "res3a"
  top: "res3a"
}
layer {
  name: "res3b_branch2a"
  type: "Convolution"
  bottom: "res3a"
  top: "res3b_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn3b_branch2a"
  type: "BatchNorm"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3b_branch2a"
  type: "Scale"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b_branch2a_relu"
  type: "ReLU"
  bottom: "res3b_branch2a"
  top: "res3b_branch2a"
}
layer {
  name: "res3b_branch2b"
  type: "Convolution"
  bottom: "res3b_branch2a"
  top: "res3b_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn3b_branch2b"
  type: "BatchNorm"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3b_branch2b"
  type: "Scale"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b_branch2b_relu"
  type: "ReLU"
  bottom: "res3b_branch2b"
  top: "res3b_branch2b"
}
layer {
  name: "res3b_branch2c"
  type: "Convolution"
  bottom: "res3b_branch2b"
  top: "res3b_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn3b_branch2c"
  type: "BatchNorm"
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3b_branch2c"
  type: "Scale"
  bottom: "res3b_branch2c"
  top: "res3b_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3b"
  type: "Eltwise"
  bottom: "res3a"
  bottom: "res3b_branch2c"
  top: "res3b"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3b_relu"
  type: "ReLU"
  bottom: "res3b"
  top: "res3b"
}
layer {
  name: "res3c_branch2a"
  type: "Convolution"
  bottom: "res3b"
  top: "res3c_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn3c_branch2a"
  type: "BatchNorm"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3c_branch2a"
  type: "Scale"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c_branch2a_relu"
  type: "ReLU"
  bottom: "res3c_branch2a"
  top: "res3c_branch2a"
}
layer {
  name: "res3c_branch2b"
  type: "Convolution"
  bottom: "res3c_branch2a"
  top: "res3c_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn3c_branch2b"
  type: "BatchNorm"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3c_branch2b"
  type: "Scale"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c_branch2b_relu"
  type: "ReLU"
  bottom: "res3c_branch2b"
  top: "res3c_branch2b"
}
layer {
  name: "res3c_branch2c"
  type: "Convolution"
  bottom: "res3c_branch2b"
  top: "res3c_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn3c_branch2c"
  type: "BatchNorm"
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3c_branch2c"
  type: "Scale"
  bottom: "res3c_branch2c"
  top: "res3c_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3c"
  type: "Eltwise"
  bottom: "res3b"
  bottom: "res3c_branch2c"
  top: "res3c"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3c_relu"
  type: "ReLU"
  bottom: "res3c"
  top: "res3c"
}
layer {
  name: "res3d_branch2a"
  type: "Convolution"
  bottom: "res3c"
  top: "res3d_branch2a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn3d_branch2a"
  type: "BatchNorm"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3d_branch2a"
  type: "Scale"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_branch2a_relu"
  type: "ReLU"
  bottom: "res3d_branch2a"
  top: "res3d_branch2a"
}
layer {
  name: "res3d_branch2b"
  type: "Convolution"
  bottom: "res3d_branch2a"
  top: "res3d_branch2b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn3d_branch2b"
  type: "BatchNorm"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3d_branch2b"
  type: "Scale"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d_branch2b_relu"
  type: "ReLU"
  bottom: "res3d_branch2b"
  top: "res3d_branch2b"
}
layer {
  name: "res3d_branch2c"
  type: "Convolution"
  bottom: "res3d_branch2b"
  top: "res3d_branch2c"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn3d_branch2c"
  type: "BatchNorm"
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale3d_branch2c"
  type: "Scale"
  bottom: "res3d_branch2c"
  top: "res3d_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res3d"
  type: "Eltwise"
  bottom: "res3c"
  bottom: "res3d_branch2c"
  top: "res3d"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res3d_relu"
  type: "ReLU"
  bottom: "res3d"
  top: "res3d"
}

################ div2 branch ##############
layer {
  name: "res4a_branch1"
  type: "Convolution"
  bottom: "res3d"
  top: "res4a_branch1"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "bn4a_branch1"
  type: "BatchNorm"
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch1"
  type: "Scale"
  bottom: "res4a_branch1"
  top: "res4a_branch1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "res3d"
  top: "res4a_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "bn4a_branch2a"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2a"
  type: "Scale"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a_relu"
  type: "ReLU"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a"
  top: "res4a_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4a_branch2b"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2b"
  type: "Scale"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2b_relu"
  type: "ReLU"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b"
}
layer {
  name: "res4a_branch2c"
  type: "Convolution"
  bottom: "res4a_branch2b"
  top: "res4a_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4a_branch2c"
  type: "BatchNorm"
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2c"
  type: "Scale"
  bottom: "res4a_branch2c"
  top: "res4a_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a"
  type: "Eltwise"
  bottom: "res4a_branch1"
  bottom: "res4a_branch2c"
  top: "res4a"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4a_relu"
  type: "ReLU"
  bottom: "res4a"
  top: "res4a"
}
layer {
  name: "res4b_branch2a"
  type: "Convolution"
  bottom: "res4a"
  top: "res4b_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4b_branch2a"
  type: "BatchNorm"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2a"
  type: "Scale"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2a_relu"
  type: "ReLU"
  bottom: "res4b_branch2a"
  top: "res4b_branch2a"
}
layer {
  name: "res4b_branch2b"
  type: "Convolution"
  bottom: "res4b_branch2a"
  top: "res4b_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4b_branch2b"
  type: "BatchNorm"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2b"
  type: "Scale"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2b_relu"
  type: "ReLU"
  bottom: "res4b_branch2b"
  top: "res4b_branch2b"
}
layer {
  name: "res4b_branch2c"
  type: "Convolution"
  bottom: "res4b_branch2b"
  top: "res4b_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4b_branch2c"
  type: "BatchNorm"
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2c"
  type: "Scale"
  bottom: "res4b_branch2c"
  top: "res4b_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b"
  type: "Eltwise"
  bottom: "res4a"
  bottom: "res4b_branch2c"
  top: "res4b"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4b_relu"
  type: "ReLU"
  bottom: "res4b"
  top: "res4b"
}
layer {
  name: "res4c_branch2a"
  type: "Convolution"
  bottom: "res4b"
  top: "res4c_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4c_branch2a"
  type: "BatchNorm"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2a"
  type: "Scale"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2a_relu"
  type: "ReLU"
  bottom: "res4c_branch2a"
  top: "res4c_branch2a"
}
layer {
  name: "res4c_branch2b"
  type: "Convolution"
  bottom: "res4c_branch2a"
  top: "res4c_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4c_branch2b"
  type: "BatchNorm"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2b"
  type: "Scale"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2b_relu"
  type: "ReLU"
  bottom: "res4c_branch2b"
  top: "res4c_branch2b"
}
layer {
  name: "res4c_branch2c"
  type: "Convolution"
  bottom: "res4c_branch2b"
  top: "res4c_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4c_branch2c"
  type: "BatchNorm"
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2c"
  type: "Scale"
  bottom: "res4c_branch2c"
  top: "res4c_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c"
  type: "Eltwise"
  bottom: "res4b"
  bottom: "res4c_branch2c"
  top: "res4c"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4c_relu"
  type: "ReLU"
  bottom: "res4c"
  top: "res4c"
}
layer {
  name: "res4d_branch2a"
  type: "Convolution"
  bottom: "res4c"
  top: "res4d_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4d_branch2a"
  type: "BatchNorm"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2a"
  type: "Scale"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2a_relu"
  type: "ReLU"
  bottom: "res4d_branch2a"
  top: "res4d_branch2a"
}
layer {
  name: "res4d_branch2b"
  type: "Convolution"
  bottom: "res4d_branch2a"
  top: "res4d_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4d_branch2b"
  type: "BatchNorm"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2b"
  type: "Scale"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2b_relu"
  type: "ReLU"
  bottom: "res4d_branch2b"
  top: "res4d_branch2b"
}
layer {
  name: "res4d_branch2c"
  type: "Convolution"
  bottom: "res4d_branch2b"
  top: "res4d_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4d_branch2c"
  type: "BatchNorm"
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2c"
  type: "Scale"
  bottom: "res4d_branch2c"
  top: "res4d_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d"
  type: "Eltwise"
  bottom: "res4c"
  bottom: "res4d_branch2c"
  top: "res4d"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4d_relu"
  type: "ReLU"
  bottom: "res4d"
  top: "res4d"
}
layer {
  name: "res4e_branch2a"
  type: "Convolution"
  bottom: "res4d"
  top: "res4e_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4e_branch2a"
  type: "BatchNorm"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2a"
  type: "Scale"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2a_relu"
  type: "ReLU"
  bottom: "res4e_branch2a"
  top: "res4e_branch2a"
}
layer {
  name: "res4e_branch2b"
  type: "Convolution"
  bottom: "res4e_branch2a"
  top: "res4e_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4e_branch2b"
  type: "BatchNorm"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2b"
  type: "Scale"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2b_relu"
  type: "ReLU"
  bottom: "res4e_branch2b"
  top: "res4e_branch2b"
}
layer {
  name: "res4e_branch2c"
  type: "Convolution"
  bottom: "res4e_branch2b"
  top: "res4e_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4e_branch2c"
  type: "BatchNorm"
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2c"
  type: "Scale"
  bottom: "res4e_branch2c"
  top: "res4e_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e"
  type: "Eltwise"
  bottom: "res4d"
  bottom: "res4e_branch2c"
  top: "res4e"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4e_relu"
  type: "ReLU"
  bottom: "res4e"
  top: "res4e"
}
layer {
  name: "res4f_branch2a"
  type: "Convolution"
  bottom: "res4e"
  top: "res4f_branch2a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4f_branch2a"
  type: "BatchNorm"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2a"
  type: "Scale"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2a_relu"
  type: "ReLU"
  bottom: "res4f_branch2a"
  top: "res4f_branch2a"
}
layer {
  name: "res4f_branch2b"
  type: "Convolution"
  bottom: "res4f_branch2a"
  top: "res4f_branch2b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4f_branch2b"
  type: "BatchNorm"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2b"
  type: "Scale"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2b_relu"
  type: "ReLU"
  bottom: "res4f_branch2b"
  top: "res4f_branch2b"
}
layer {
  name: "res4f_branch2c"
  type: "Convolution"
  bottom: "res4f_branch2b"
  top: "res4f_branch2c"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4f_branch2c"
  type: "BatchNorm"
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2c"
  type: "Scale"
  bottom: "res4f_branch2c"
  top: "res4f_branch2c"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f"
  type: "Eltwise"
  bottom: "res4e"
  bottom: "res4f_branch2c"
  top: "res4f"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4f_relu"
  type: "ReLU"
  bottom: "res4f"
  top: "res4f"
}

########## div 3 branch #############
layer {
  name: "res4a_branch1_div3"
  type: "Convolution"
  bottom: "res3d"
  top: "res4a_branch1_div3"
  param {
    name: "res4a_branch1_weight"
  }
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 3
  }
}
layer {
  name: "bn4a_branch1_div3"
  type: "BatchNorm"
  bottom: "res4a_branch1_div3"
  top: "res4a_branch1_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch1_div3"
  type: "Scale"
  bottom: "res4a_branch1_div3"
  top: "res4a_branch1_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a_div3"
  type: "Convolution"
  bottom: "res3d"
  top: "res4a_branch2a_div3"
  param {
    name: "res4a_branch2a_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 3
  }
}
layer {
  name: "bn4a_branch2a_div3"
  type: "BatchNorm"
  bottom: "res4a_branch2a_div3"
  top: "res4a_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2a_div3"
  type: "Scale"
  bottom: "res4a_branch2a_div3"
  top: "res4a_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2a_relu_div3"
  type: "ReLU"
  bottom: "res4a_branch2a_div3"
  top: "res4a_branch2a_div3"
}
layer {
  name: "res4a_branch2b_div3"
  type: "Convolution"
  bottom: "res4a_branch2a_div3"
  top: "res4a_branch2b_div3"
  param {
    name: "res4a_branch2b_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4a_branch2b_div3"
  type: "BatchNorm"
  bottom: "res4a_branch2b_div3"
  top: "res4a_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2b_div3"
  type: "Scale"
  bottom: "res4a_branch2b_div3"
  top: "res4a_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_branch2b_relu_div3"
  type: "ReLU"
  bottom: "res4a_branch2b_div3"
  top: "res4a_branch2b_div3"
}
layer {
  name: "res4a_branch2c_div3"
  type: "Convolution"
  param {
    name: "res4a_branch2c_weight"
  }
  bottom: "res4a_branch2b_div3"
  top: "res4a_branch2c_div3"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4a_branch2c_div3"
  type: "BatchNorm"
  bottom: "res4a_branch2c_div3"
  top: "res4a_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4a_branch2c_div3"
  type: "Scale"
  bottom: "res4a_branch2c_div3"
  top: "res4a_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4a_div3"
  type: "Eltwise"
  bottom: "res4a_branch1_div3"
  bottom: "res4a_branch2c_div3"
  top: "res4a_div3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4a_relu_div3"
  type: "ReLU"
  bottom: "res4a_div3"
  top: "res4a_div3"
}
layer {
  name: "res4b_branch2a_div3"
  type: "Convolution"
  bottom: "res4a_div3"
  top: "res4b_branch2a_div3"
  param {
    name: "res4b_branch2a_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4b_branch2a_div3"
  type: "BatchNorm"
  bottom: "res4b_branch2a_div3"
  top: "res4b_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2a_div3"
  type: "Scale"
  bottom: "res4b_branch2a_div3"
  top: "res4b_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2a_relu_div3"
  type: "ReLU"
  bottom: "res4b_branch2a_div3"
  top: "res4b_branch2a_div3"
}
layer {
  name: "res4b_branch2b_div3"
  type: "Convolution"
  bottom: "res4b_branch2a_div3"
  top: "res4b_branch2b_div3"
  param {
    name: "res4b_branch2b_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4b_branch2b_div3"
  type: "BatchNorm"
  bottom: "res4b_branch2b_div3"
  top: "res4b_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2b_div3"
  type: "Scale"
  bottom: "res4b_branch2b_div3"
  top: "res4b_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b_branch2b_relu_div3"
  type: "ReLU"
  bottom: "res4b_branch2b_div3"
  top: "res4b_branch2b_div3"
}
layer {
  name: "res4b_branch2c_div3"
  type: "Convolution"
  bottom: "res4b_branch2b_div3"
  top: "res4b_branch2c_div3"
  param {
    name: "res4b_branch2c_weight"
  }
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4b_branch2c_div3"
  type: "BatchNorm"
  bottom: "res4b_branch2c_div3"
  top: "res4b_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4b_branch2c_div3"
  type: "Scale"
  bottom: "res4b_branch2c_div3"
  top: "res4b_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4b"
  type: "Eltwise"
  bottom: "res4a_div3"
  bottom: "res4b_branch2c_div3"
  top: "res4b_div3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4b_relu_div3"
  type: "ReLU"
  bottom: "res4b_div3"
  top: "res4b_div3"
}
layer {
  name: "res4c_branch2a_div3"
  type: "Convolution"
  bottom: "res4b_div3"
  top: "res4c_branch2a_div3"
  param {
    name: "res4c_branch2a_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4c_branch2a_div3"
  type: "BatchNorm"
  bottom: "res4c_branch2a_div3"
  top: "res4c_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2a_div3"
  type: "Scale"
  bottom: "res4c_branch2a_div3"
  top: "res4c_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2a_relu_div3"
  type: "ReLU"
  bottom: "res4c_branch2a_div3"
  top: "res4c_branch2a_div3"
}
layer {
  name: "res4c_branch2b_div3"
  type: "Convolution"
  bottom: "res4c_branch2a_div3"
  top: "res4c_branch2b_div3"
  param {
    name: "res4c_branch2b_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4c_branch2b_div3"
  type: "BatchNorm"
  bottom: "res4c_branch2b_div3"
  top: "res4c_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2b_div3"
  type: "Scale"
  bottom: "res4c_branch2b_div3"
  top: "res4c_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_branch2b_relu_div3"
  type: "ReLU"
  bottom: "res4c_branch2b_div3"
  top: "res4c_branch2b_div3"
}
layer {
  name: "res4c_branch2c_div3"
  type: "Convolution"
  bottom: "res4c_branch2b_div3"
  top: "res4c_branch2c_div3"
  param {
    name: "res4c_branch2c_weight"
  }
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4c_branch2c_div3"
  type: "BatchNorm"
  bottom: "res4c_branch2c_div3"
  top: "res4c_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4c_branch2c_div3"
  type: "Scale"
  bottom: "res4c_branch2c_div3"
  top: "res4c_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4c_div3"
  type: "Eltwise"
  bottom: "res4b_div3"
  bottom: "res4c_branch2c_div3"
  top: "res4c_div3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4c_relu_div3"
  type: "ReLU"
  bottom: "res4c_div3"
  top: "res4c_div3"
}
layer {
  name: "res4d_branch2a_div3"
  type: "Convolution"
  bottom: "res4c_div3"
  top: "res4d_branch2a_div3"
  param {
    name: "res4d_branch2a_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4d_branch2a_div3"
  type: "BatchNorm"
  bottom: "res4d_branch2a_div3"
  top: "res4d_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2a_div3"
  type: "Scale"
  bottom: "res4d_branch2a_div3"
  top: "res4d_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2a_relu_div3"
  type: "ReLU"
  bottom: "res4d_branch2a_div3"
  top: "res4d_branch2a_div3"
}
layer {
  name: "res4d_branch2b_div3"
  type: "Convolution"
  bottom: "res4d_branch2a_div3"
  top: "res4d_branch2b_div3"
  param {
    name: "res4d_branch2b_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4d_branch2b_div3"
  type: "BatchNorm"
  bottom: "res4d_branch2b_div3"
  top: "res4d_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2b_div3"
  type: "Scale"
  bottom: "res4d_branch2b_div3"
  top: "res4d_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_branch2b_relu_div3"
  type: "ReLU"
  bottom: "res4d_branch2b_div3"
  top: "res4d_branch2b_div3"
}
layer {
  name: "res4d_branch2c_div3"
  type: "Convolution"
  bottom: "res4d_branch2b_div3"
  top: "res4d_branch2c_div3"
  param {
    name: "res4d_branch2c_weight"
  }
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4d_branch2c_div3"
  type: "BatchNorm"
  bottom: "res4d_branch2c_div3"
  top: "res4d_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4d_branch2c_div3"
  type: "Scale"
  bottom: "res4d_branch2c_div3"
  top: "res4d_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4d_div3"
  type: "Eltwise"
  bottom: "res4c_div3"
  bottom: "res4d_branch2c_div3"
  top: "res4d_div3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4d_relu_div3"
  type: "ReLU"
  bottom: "res4d_div3"
  top: "res4d_div3"
}
layer {
  name: "res4e_branch2a_div3"
  type: "Convolution"
  bottom: "res4d_div3"
  top: "res4e_branch2a_div3"
  param {
    name: "res4e_branch2a_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4e_branch2a_div3"
  type: "BatchNorm"
  bottom: "res4e_branch2a_div3"
  top: "res4e_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2a_div3"
  type: "Scale"
  bottom: "res4e_branch2a_div3"
  top: "res4e_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2a_relu_div3"
  type: "ReLU"
  bottom: "res4e_branch2a_div3"
  top: "res4e_branch2a_div3"
}
layer {
  name: "res4e_branch2b_div3"
  type: "Convolution"
  bottom: "res4e_branch2a_div3"
  top: "res4e_branch2b_div3"
  param {
    name: "res4e_branch2b_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4e_branch2b_div3"
  type: "BatchNorm"
  bottom: "res4e_branch2b_div3"
  top: "res4e_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2b_div3"
  type: "Scale"
  bottom: "res4e_branch2b_div3"
  top: "res4e_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_branch2b_relu_div3"
  type: "ReLU"
  bottom: "res4e_branch2b_div3"
  top: "res4e_branch2b_div3"
}
layer {
  name: "res4e_branch2c_div3"
  type: "Convolution"
  bottom: "res4e_branch2b_div3"
  top: "res4e_branch2c_div3"
  param {
    name: "res4e_branch2c_weight"
  }
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4e_branch2c_div3"
  type: "BatchNorm"
  bottom: "res4e_branch2c_div3"
  top: "res4e_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4e_branch2c_div3"
  type: "Scale"
  bottom: "res4e_branch2c_div3"
  top: "res4e_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4e_div3"
  type: "Eltwise"
  bottom: "res4d_div3"
  bottom: "res4e_branch2c_div3"
  top: "res4e_div3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4e_relu_div3"
  type: "ReLU"
  bottom: "res4e_div3"
  top: "res4e_div3"
}
layer {
  name: "res4f_branch2a_div3"
  type: "Convolution"
  bottom: "res4e_div3"
  top: "res4f_branch2a_div3"
  param {
    name: "res4f_branch2a_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4f_branch2a_div3"
  type: "BatchNorm"
  bottom: "res4f_branch2a_div3"
  top: "res4f_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2a_div3"
  type: "Scale"
  bottom: "res4f_branch2a_div3"
  top: "res4f_branch2a_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2a_relu_div3"
  type: "ReLU"
  bottom: "res4f_branch2a_div3"
  top: "res4f_branch2a_div3"
}
layer {
  name: "res4f_branch2b_div3"
  type: "Convolution"
  bottom: "res4f_branch2a_div3"
  top: "res4f_branch2b_div3"
  param {
    name: "res4f_branch2b_weight"
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "bn4f_branch2b_div3"
  type: "BatchNorm"
  bottom: "res4f_branch2b_div3"
  top: "res4f_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2b_div3"
  type: "Scale"
  bottom: "res4f_branch2b_div3"
  top: "res4f_branch2b_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_branch2b_relu_div3"
  type: "ReLU"
  bottom: "res4f_branch2b_div3"
  top: "res4f_branch2b_div3"
}
layer {
  name: "res4f_branch2c_div3"
  type: "Convolution"
  bottom: "res4f_branch2b_div3"
  top: "res4f_branch2c_div3"
  param {
    name: "res4f_branch2c_weight"
  }
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "bn4f_branch2c_div3"
  type: "BatchNorm"
  bottom: "res4f_branch2c_div3"
  top: "res4f_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "scale4f_branch2c_div3"
  type: "Scale"
  bottom: "res4f_branch2c_div3"
  top: "res4f_branch2c_div3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4f_div3"
  type: "Eltwise"
  bottom: "res4e_div3"
  bottom: "res4f_branch2c_div3"
  top: "res4f_div3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res4f_relu_div3"
  type: "ReLU"
  bottom: "res4f_div3"
  top: "res4f_div3"
}

########## shared neck at scale 48 ##########

layer { name: "conv5_4_div3" type:"Convolution" bottom: "res4f_div3" top: "conv5_4_div3"
  param { name: 'rnn_conv_1_weight' lr_mult: 10} param { name: 'rnn_conv_1_bias' lr_mult: 20}
  convolution_param { kernel_size: 3 stride: 1 pad: 1  num_output: 256
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "conv5_4_div3_relu" type: "ReLU" bottom: "conv5_4_div3" top: "conv5_4_div3" }

layer { name: "conv5_5_div3" type: "Convolution" bottom: "conv5_4_div3" top: "conv5_5_div3"
  param { name: 'rnn_conv_2_weight' lr_mult: 10} param { name: 'rnn_conv_2_bias' lr_mult: 20}
  convolution_param { kernel_size: 1 stride: 1 pad: 0  num_output: 1024
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "pool5b_div3" type: "Pooling" bottom: "conv5_5_div3" top: "pool5b_div3" 
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "pool5a_div3" type: "Pooling" bottom: "res4f_div3" top: "pool5a_div3" 
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "sum_48s" type: "Eltwise" bottom: "pool5a_div3" bottom: "pool5b_div3" top: "sum_48s" }
layer { name: "sum_48s_relu" type: "ReLU" bottom: "sum_48s" top: "sum_48s" }


########## shared neck at scale 96 ##########

layer { name: "conv6_4_div3" type:"Convolution" bottom: "sum_48s" top: "conv6_4_div3"
  param { name: 'rnn_conv_1_weight' lr_mult: 10} param { name: 'rnn_conv_1_bias' lr_mult: 20}
  convolution_param { kernel_size: 3 stride: 1 pad: 1  num_output: 256
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "conv6_4_div3_relu" type: "ReLU" bottom: "conv6_4_div3" top: "conv6_4_div3" }

layer { name: "conv6_5_div3" type:"Convolution" bottom: "conv6_4_div3" top: "conv6_5_div3"
  param { name: 'rnn_conv_2_weight' lr_mult: 10} param { name: 'rnn_conv_2_bias' lr_mult: 20}
  convolution_param { kernel_size: 1 stride: 1 pad: 0  num_output: 1024
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "pool6b_div3" type:"Pooling" bottom: "conv6_5_div3" top: "pool6b_div3"
  pooling_param { pool: AVE kernel_size: 2 stride: 2 } }

layer { name: "pool6a_div3" type:"Pooling" bottom: "sum_48s" top: "pool6a_div3"
  pooling_param { pool: AVE kernel_size: 2 stride: 2 } }

layer { name: "sum_96s" type: "Eltwise" bottom: "pool6a_div3" bottom: "pool6b_div3" top: "sum_96s" }
layer { name: "sum_96s_relu" type: "ReLU" bottom: "sum_96s" top: "sum_96s" }


########## shared neck at scale 32 ##########

layer { name: "conv5_4" type:"Convolution" bottom: "res4f" top: "conv5_4"
  param { name: 'rnn_conv_1_weight' } param { name: 'rnn_conv_1_bias' }
  convolution_param { kernel_size: 3 stride: 1 pad: 1  num_output: 256
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "conv5_4_relu" type: "ReLU" bottom: "conv5_4" top: "conv5_4" }

layer { name: "conv5_5" type: "Convolution" bottom: "conv5_4" top: "conv5_5"
  param { name: 'rnn_conv_2_weight' } param { name: 'rnn_conv_2_bias' }
  convolution_param { kernel_size: 1 stride: 1 pad: 0  num_output: 1024
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "pool5b" type: "Pooling" bottom: "conv5_5" top: "pool5b"
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "pool5a" type: "Pooling" bottom: "res4f" top: "pool5a"
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "sum_32s" type: "Eltwise" bottom: "pool5a" bottom: "pool5b" top: "sum_32s" }
layer { name: "sum_32s_relu" type: "ReLU" bottom: "sum_32s" top: "sum_32s" }

########## shared neck at scale 64 ##########

layer { name: "conv6_4" type:"Convolution" bottom: "sum_32s" top: "conv6_4"
  param { name: 'rnn_conv_1_weight' } param { name: 'rnn_conv_1_bias' }
  convolution_param { kernel_size: 3 stride: 1 pad: 1  num_output: 256
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "conv6_4_relu" type: "ReLU" bottom: "conv6_4" top: "conv6_4" }

layer { name: "conv6_5" type: "Convolution" bottom: "conv6_4" top: "conv6_5"
  param { name: 'rnn_conv_2_weight' } param { name: 'rnn_conv_2_bias' }
  convolution_param { kernel_size: 1 stride: 1 pad: 0  num_output: 1024
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "pool6b" type: "Pooling" bottom: "conv6_5" top: "pool6b"
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "pool6a" type: "Pooling" bottom: "sum_32s" top: "pool6a"
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "sum_64s" type: "Eltwise" bottom: "pool6a" bottom: "pool6b" top: "sum_64s" }
layer { name: "sum_64s_relu" type: "ReLU" bottom: "sum_64s" top: "sum_64s" }


########## shared neck at scale 128 ##########

layer { name: "conv7_4" type:"Convolution" bottom: "sum_64s" top: "conv7_4"
  param { name: 'rnn_conv_1_weight' } param { name: 'rnn_conv_1_bias' }
  convolution_param { kernel_size: 3 stride: 1 pad: 1  num_output: 256
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "conv7_4_relu" type: "ReLU" bottom: "conv7_4" top: "conv7_4" }

layer { name: "conv7_5" type: "Convolution" bottom: "conv7_4" top: "conv7_5"
  param { name: 'rnn_conv_2_weight' } param { name: 'rnn_conv_2_bias' }
  convolution_param { kernel_size: 1 stride: 1 pad: 0  num_output: 1024
    weight_filler { type: 'gaussian' std: 0.00001 } bias_filler { type: 'constant' value: 0 } } }

layer { name: "pool7b" type: "Pooling" bottom: "conv7_5" top: "pool7b"
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "pool7a" type: "Pooling" bottom: "sum_64s" top: "pool7a"
  pooling_param { pool: AVE kernel_size: 2 stride: 2} }

layer { name: "sum_128s" type: "Eltwise" bottom: "pool7a" bottom: "pool7b" top: "sum_128s" }
layer { name: "sum_128s_relu" type: "ReLU" bottom: "sum_128s" top: "sum_128s" }


########## objectness attention at scale 8 ##########

layer {  name: "res_buAttSize1a_8"  type: "Convolution"  bottom: "res3d"  top: "res_buAttSize1a_8"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
}

layer { name: "relu_buAttSize1a_8" type: "ReLU" bottom: "res_buAttSize1a_8" top: "res_buAttSize1a_8" }

layer {  name: "res_buAttSize1b_8"  type: "Convolution"  bottom: "res_buAttSize1a_8"  top: "res_buAttSize1b_8"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_8" type: "Softmax" bottom: "res_buAttSize1b_8" top: "finalAtt8" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt8"
  top: "nonObj8"
  top: "obj8"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj8"
  top: "obj8_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj8"
  top: "nonObj8_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj8_flat"
  bottom: "nonObj8_flat"
  top: "obj8_checked"
  top: "nonObj8_checked"
}


########## objectness attention at scale 16 ##########

layer {  name: "res_buAttSize1a_16"  type: "Convolution"  bottom: "res4f"  top: "res_buAttSize1a_16"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
}

layer { name: "relu_buAttSize1a_16" type: "ReLU" bottom: "res_buAttSize1a_16" top: "res_buAttSize1a_16" }

layer {  name: "res_buAttSize1b_16"  type: "Convolution"  bottom: "res_buAttSize1a_16"  top: "res_buAttSize1b_16"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_16" type: "Softmax" bottom: "res_buAttSize1b_16" top: "finalAtt16" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt16"
  top: "nonObj16"
  top: "obj16"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj16"
  top: "obj16_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj16"
  top: "nonObj16_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj16_flat"
  bottom: "nonObj16_flat"
  top: "obj16_checked"
  top: "nonObj16_checked"
}

########## objectness attention at scale 24 ##########
layer {  name: "res_buAttSize1a_24"  type: "Convolution"  bottom: "res4f_div3"  top: "res_buAttSize1a_24"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
} 

layer { name: "relu_buAttSize1a_24" type: "ReLU" bottom: "res_buAttSize1a_24" top: "res_buAttSize1a_24" }

layer {  name: "res_buAttSize1b_24"  type: "Convolution"  bottom: "res_buAttSize1a_24"  top: "res_buAttSize1b_24"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_24" type: "Softmax" bottom: "res_buAttSize1b_24" top: "finalAtt24" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt24"
  top: "nonObj24"
  top: "obj24"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj24"
  top: "obj24_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj24"
  top: "nonObj24_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj24_flat"
  bottom: "nonObj24_flat"
  top: "obj24_checked"
  top: "nonObj24_checked"
}

########## objectness attention at scale 32 ##########

layer {  name: "res_buAttSize1a_32"  type: "Convolution"  bottom: "sum_32s"  top: "res_buAttSize1a_32"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
} 

layer { name: "relu_buAttSize1a_32" type: "ReLU" bottom: "res_buAttSize1a_32" top: "res_buAttSize1a_32" }

layer {  name: "res_buAttSize1b_32"  type: "Convolution"  bottom: "res_buAttSize1a_32"  top: "res_buAttSize1b_32"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_32" type: "Softmax" bottom: "res_buAttSize1b_32" top: "finalAtt32" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt32"
  top: "nonObj32"
  top: "obj32"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj32"
  top: "obj32_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj32"
  top: "nonObj32_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj32_flat"
  bottom: "nonObj32_flat"
  top: "obj32_checked"
  top: "nonObj32_checked"
}

########## objectness attention at scale 48 ##########

layer {  name: "res_buAttSize1a_48"  type: "Convolution"  bottom: "sum_48s"  top: "res_buAttSize1a_48"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
} 

layer { name: "relu_buAttSize1a_48" type: "ReLU" bottom: "res_buAttSize1a_48" top: "res_buAttSize1a_48" }

layer {  name: "res_buAttSize1b_48"  type: "Convolution"  bottom: "res_buAttSize1a_48"  top: "res_buAttSize1b_48"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_48" type: "Softmax" bottom: "res_buAttSize1b_48" top: "finalAtt48" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt48"
  top: "nonObj48"
  top: "obj48"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj48"
  top: "obj48_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj48"
  top: "nonObj48_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj48_flat"
  bottom: "nonObj48_flat"
  top: "obj48_checked"
  top: "nonObj48_checked"
}

########## objectness attention at scale 64 ##########

layer {  name: "res_buAttSize1a_64"  type: "Convolution"  bottom: "sum_64s"  top: "res_buAttSize1a_64"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
} 

layer { name: "relu_buAttSize1a_64" type: "ReLU" bottom: "res_buAttSize1a_64" top: "res_buAttSize1a_64" }

layer {  name: "res_buAttSize1b_64"  type: "Convolution"  bottom: "res_buAttSize1a_64"  top: "res_buAttSize1b_64"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_64" type: "Softmax" bottom: "res_buAttSize1b_64" top: "finalAtt64" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt64"
  top: "nonObj64"
  top: "obj64"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj64"
  top: "obj64_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj64"
  top: "nonObj64_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj64_flat"
  bottom: "nonObj64_flat"
  top: "obj64_checked"
  top: "nonObj64_checked"
}

########## objectness attention at scale 96 ##########

layer {  name: "res_buAttSize1a_96"  type: "Convolution"  bottom: "sum_96s"  top: "res_buAttSize1a_96"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
} 

layer { name: "relu_buAttSize1a_96" type: "ReLU" bottom: "res_buAttSize1a_96" top: "res_buAttSize1a_96" }

layer {  name: "res_buAttSize1b_96"  type: "Convolution"  bottom: "res_buAttSize1a_96"  top: "res_buAttSize1b_96"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_96" type: "Softmax" bottom: "res_buAttSize1b_96" top: "finalAtt96" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt96"
  top: "nonObj96"
  top: "obj96"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj96"
  top: "obj96_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj96"
  top: "nonObj96_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj96_flat"
  bottom: "nonObj96_flat"
  top: "obj96_checked"
  top: "nonObj96_checked"
}

########## objectness attention at scale 128 ##########

layer {  name: "res_buAttSize1a_128"  type: "Convolution"  bottom: "sum_128s"  top: "res_buAttSize1a_128"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 128  pad: 1    kernel_size: 3    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0    }  }
} 

layer { name: "relu_buAttSize1a_128" type: "ReLU" bottom: "res_buAttSize1a_128" top: "res_buAttSize1a_128" }

layer {  name: "res_buAttSize1b_128"  type: "Convolution"  bottom: "res_buAttSize1a_128"  top: "res_buAttSize1b_128"
  param {    lr_mult: 10    decay_mult: 1  }  param {    lr_mult: 20    decay_mult: 0  }
  convolution_param {  num_output: 2  pad: 2    kernel_size: 4    stride: 1  weight_filler {      type: "gaussian"      std: 0.01    }    bias_filler {      type: "constant"      value: 0.5    }  }
}

layer { name: "loss_buAttSize_128" type: "Softmax" bottom: "res_buAttSize1b_128" top: "finalAtt128" }

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "finalAtt128"
  top: "nonObj128"
  top: "obj128"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

layer{
  type: "Reshape"
  bottom: "obj128"
  top: "obj128_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "Reshape"
  bottom: "nonObj128"
  top: "nonObj128_flat"
  reshape_param {
      shape {
        dim: 1  
        dim: 1
        dim: 1
        dim: -1 
      }
    }
}

layer{
  type: "CheckAtt"
  bottom: "obj128_flat"
  bottom: "nonObj128_flat"
  top: "obj128_checked"
  top: "nonObj128_checked"
}


########## BoxSelection ##########

layer {
  name: "concatFlattendObj"
  bottom: "obj8_checked"
  bottom: "obj16_checked"
  bottom: "obj24_checked"
  bottom: "obj32_checked"
  bottom: "obj48_checked"
  bottom: "obj64_checked"
  bottom: "obj96_checked"
  bottom: "obj128_checked"
  top: "flattenedObj"
  type: "Concat"
  concat_param {
    axis: -1
  }
}

layer {
  name: "concatFlattendNonObj"
  bottom: "nonObj8_checked"
  bottom: "nonObj16_checked"
  bottom: "nonObj24_checked"
  bottom: "nonObj32_checked"
  bottom: "nonObj48_checked"
  bottom: "nonObj64_checked"
  bottom: "nonObj96_checked"
  bottom: "nonObj128_checked"
  top: "flattenedNonObj"
  type: "Concat"
  concat_param {
    axis: -1
  }
}

layer {
  name:"argmax"
  type: "ArgMaxAll"
  bottom: "flattenedObj"
  bottom: "flattenedNonObj"
  top: "obj_argmax"
  argmax_param {
    top_k: 1000 #get best 1000 locations
    axis: -1
  }
}

layer {
  name:"flags"
  type: "ConvertIndices"
  bottom: "obj_argmax"
  bottom: "flattenedObj"
  top: "obj_flags"
  top: "objn_new"
}

layer {
  name: "flagsToIndices"
  type: "FlagsToIndices"
  bottom: "obj_flags"
  top: "obj_indices"
}

########## split up indices ##########

layer{
  type: "SplitIndices"
  bottom: "obj_flags"
  bottom: "obj8_checked"
  bottom: "obj16_checked"
  bottom: "obj24_checked"
  bottom: "obj32_checked"
  bottom: "obj48_checked"
  bottom: "obj64_checked"
  bottom: "obj96_checked"
  bottom: "obj128_checked"
  top: "obj8_flags"
  top: "obj16_flags"
  top: "obj24_flags"
  top: "obj32_flags"
  top: "obj48_flags"
  top: "obj64_flags"
  top: "obj96_flags"
  top: "obj128_flags"
}

########## sample windows ##########

layer { name: "conv_feat_1_8s" type: "Convolution" bottom: "res3d" top: "conv_feat_1_8s"
  param { lr_mult: 1 } 
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_8" type: "SlidingWindowIndex" bottom: "conv_feat_1_8s" bottom: "obj8_flags" top: "sample_8s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "conv_feat_1_16s" type: "Convolution" bottom: "res4f" top: "conv_feat_1_16s"
  param { name: "conv_feat_1" lr_mult: 1 } 
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_16" type: "SlidingWindowIndex" bottom: "conv_feat_1_16s" bottom: "obj16_flags" top: "sample_16s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "conv_feat_1_24s" type: "Convolution" bottom: "res4f_div3" top: "conv_feat_1_24s"
  param { name: "conv_feat_1" lr_mult: 1 } 
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_24" type: "SlidingWindowIndex" bottom: "conv_feat_1_24s" bottom: "obj24_flags" top: "sample_24s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "conv_feat_1_32s" type: "Convolution" bottom: "sum_32s" top: "conv_feat_1_32s"
  param { name: "conv_feat_1" lr_mult: 1 }
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_32" type: "SlidingWindowIndex" bottom: "conv_feat_1_32s" bottom: "obj32_flags" top: "sample_32s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "conv_feat_1_48s" type: "Convolution" bottom: "sum_48s" top: "conv_feat_1_48s"
  param { name: "conv_feat_1" lr_mult: 1 }
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_48" type: "SlidingWindowIndex" bottom: "conv_feat_1_48s" bottom: "obj48_flags" top: "sample_48s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "conv_feat_1_64s" type: "Convolution" bottom: "sum_64s" top: "conv_feat_1_64s"
  param { name: "conv_feat_1" lr_mult: 1 }
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_64" type: "SlidingWindowIndex" bottom: "conv_feat_1_64s" bottom: "obj64_flags" top: "sample_64s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "conv_feat_1_96s" type: "Convolution" bottom: "sum_96s" top: "conv_feat_1_96s"
  param { name: "conv_feat_1" lr_mult: 1 }
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_96" type: "SlidingWindowIndex" bottom: "conv_feat_1_96s" bottom: "obj96_flags" top: "sample_96s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "conv_feat_1_128s" type: "Convolution" bottom: "sum_128s" top: "conv_feat_1_128s"
  param { name: "conv_feat_1" lr_mult: 1 }
  convolution_param { num_output: 128 pad: 0 kernel_size: 1 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } }

layer { name: "extractor_128" type: "SlidingWindowIndex" bottom: "conv_feat_1_128s" bottom: "obj128_flags" top: "sample_128s"
  sliding_window_param { window_h: 10 window_w: 10 }}

layer { name: "sample_concat" type: "Concat"
  bottom: "sample_8s" bottom: "sample_16s" bottom: "sample_24s"  bottom: "sample_32s" bottom: "sample_48s"
  bottom: "sample_64s" bottom: "sample_96s" bottom: "sample_128s" 
top: "sample"
  concat_param { concat_dim: 0 } }

layer { bottom: "sample" top: "sample_bn" type: "BatchNorm" name:"sample_bn" batch_norm_param { use_global_stats: false } 
  param { lr_mult: 0 decay_mult: 0 } param { lr_mult: 0 decay_mult: 0 } param { lr_mult: 0 decay_mult: 0 } }
layer { bottom: "sample_bn" top: "sample_s" type: "Scale" name: "sample_scale" scale_param { bias_term: true } 
  param { lr_mult: 1 decay_mult: 0 } param { lr_mult: 1 decay_mult: 0} }

########## cls branch ##########

layer { name: 'cls_1' type: 'InnerProduct' bottom: 'sample_s' top: 'cls_1'
    param { lr_mult: 1.0 } param { lr_mult: 1.0 }
    inner_product_param { num_output: 512 weight_filler: { type: 'gaussian' std: 0.01 } } }
layer { name: 'relu_cls_1' type: 'ReLU' bottom: 'cls_1' top: 'cls_1' }
layer { name: 'dropout_cls_1' type: 'Dropout' bottom: 'cls_1' top: 'cls_1' dropout_param { dropout_ratio: 0.5 } }


layer { name: 'cls_2' type: 'InnerProduct' bottom: 'cls_1' top: 'cls_2'
  param { lr_mult: 1.0 } param { lr_mult: 1.0 }
  inner_product_param { num_output: 1024 weight_filler: { type: 'gaussian' std: 0.01 } } }
layer { name: 'relu_cls_2' type: 'ReLU' bottom: 'cls_2' top: 'cls_2' }

########## cls score ##########

layer { name: 'obj_score' type: 'InnerProduct' bottom: 'cls_2' top: 'obj_score' 
  inner_product_param { num_output: 1 weight_filler { type: "gaussian" std: 0.001 } bias_filler { type: "constant" std: 0 } } }
layer { name: "obj_reshape" type: "Reshape" bottom: "obj_score" top: "obj_score_reshape" 
  reshape_param { shape { dim: -1 dim: 1 dim: 1 dim: 1 } } }

layer { name: 'sig_score' type: 'Sigmoid' bottom: 'obj_score' top: 'objn' }

layer { name: "top_k" type: "DummyData" top: "k" dummy_data_param { shape { dim: 1000 dim: 1 dim: 1 dim: 1} } }

layer { name: "batch_filter" type: "TopKOld" bottom: "sample_s" bottom: "objn" bottom: "k" top: "filted_sample" top: "top_k" }

########## att branch ##########

layer { name: 'att' type: 'InnerProduct' bottom: 'filted_sample' top: 'flatten_att'
  param { lr_mult: 1.0 } param { lr_mult: 2.0 }
  inner_product_param { num_output: 100 weight_filler: { type: 'gaussian' std: 0.0001 } bias_filler { type: 'constant' value: 0 } } }

layer {
  name: "atts_reshape" type: "Reshape" bottom: "flatten_att" top: "atts"
  reshape_param { shape { dim: -1 dim: 1 dim: 10 dim: 10 } }
}

######### att filter ###########

layer { name: 'att_sigmoid' type: 'Sigmoid' bottom: 'atts' top: 'sig_atts' }
layer { name: 'att_filt' type: 'TileProduct' bottom: 'filted_sample' bottom: 'sig_atts' top: 'atts_filt_feat' }

########## seg branch ##########

layer { name: 'seg_1' type: 'InnerProduct' bottom: 'atts_filt_feat' top: 'seg_1'
    param { lr_mult: 1.0 }
    inner_product_param { num_output: 512 weight_filler: { type: 'gaussian' std: 0.001 } bias_term: false } } 

layer { bottom: "seg_1" top: "seg_1" type: "Power" name:"seg_1_power" power_param { scale: 316.22776601684}  }
layer { bottom: "seg_1" top: "seg_1" type: "Scale" name: "seg_1_scale" scale_param { bias_term: true } 
  param { lr_mult: 1 decay_mult: 0 } param { lr_mult: 1 decay_mult: 0} }

layer { name: 'seg_2' type: 'InnerProduct' bottom: 'seg_1' top: 'seg_2'
  param { lr_mult: 1.0 } param { lr_mult: 2.0 }
  inner_product_param { num_output: 1600 weight_filler: { type: 'gaussian' std: 0.001 } bias_filler { type: 'constant' value: 0 } } }

########## seg score ##########

layer { name: 'mask_reshape1' type: 'Reshape' bottom: 'seg_2' top: 'seg_mask'
  reshape_param { shape { dim: 1 dim: -1 dim: 40 dim: 40 } } }

layer { name: 'upscore_' type: "Deconvolution" bottom: "seg_mask" top: "seg_mask_up" param { lr_mult: 0 }
  convolution_param { num_output: 1000 group: 1000 bias_term: false kernel_size: 8 stride: 4 } }

layer { name: "mask_shape" type: "DummyData" top: "mask_shape" dummy_data_param { shape { dim: 1 dim: 1 dim: 160 dim: 160 } } }

layer { name: "crop" type: "Crop" bottom: "seg_mask_up" bottom: "mask_shape" top: "seg_mask_crop" crop_param { axis: 2 offset: 2 } }

layer { name: "mask_reshap2" type: "Reshape" bottom: "seg_mask_crop" top: "seg_mask_crop_reshape" 
  reshape_param { shape { dim: -1 dim: 1 dim: 160 dim: 160 } } }

layer { name: 'seg' type: 'Sigmoid' bottom: 'seg_mask_crop_reshape' top: 'masks' }
